political_actions = {

SAU_integrate_yemen = {

      icon = GFX_decision_generic_decision
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 293
			NOT = { 293 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 293
			original_tag = SAU
			NOT = { 293 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}

	    days_remove = 60
		complete_effect = { add_political_power = -50 }
      	remove_effect = {
			set_global_flag = SAU_yemen
    	    add_state_core = 293

		}
	}
	SAU_integrate_kuwait = {

      icon = GFX_decision_generic_decision
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 656
			NOT = { 656 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 656
			original_tag = SAU
			NOT = { 656 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}

	    days_remove = 60
		complete_effect = { add_political_power = -50 }
      	remove_effect = {
			set_global_flag = SAU_kuwait
    	    add_state_core = 656

		}
	}
	SAU_integrate_aden = {

      icon = GFX_decision_generic_decision
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 659
			NOT = { 659 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 659
			original_tag = SAU
			NOT = { 659 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}

	    days_remove = 60
		complete_effect = { add_political_power = -50 }
      	remove_effect = {
			set_global_flag = SAU_aden
    	    add_state_core = 659

		}
	}
	SAU_integrate_dubai = {
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
      icon = GFX_decision_generic_decision

		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 658
			NOT = { 658 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 658
			original_tag = SAU
			NOT = { 658 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}

	    days_remove = 60
		complete_effect = { add_political_power = -50 }
      	remove_effect = {
			set_global_flag = SAU_dubai
    	    add_state_core = 658

		}
	}
	SAU_integrate_oman = {
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
      icon = GFX_decision_generic_decision

		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 294
			NOT = { 294 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 294
			original_tag = SAU
			NOT = { 294 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}

	    days_remove = 60
		complete_effect = { add_political_power = -50 }
      	remove_effect = {
			set_global_flag = SAU_oman
    	    add_state_core = 294

		}
	}
	SAU_integrate_qatar = {
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
      icon = GFX_decision_generic_decision

		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 765
			NOT = { 765 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 765
			original_tag = SAU
			NOT = { 765 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}

	    days_remove = 60
		complete_effect = { add_political_power = -50 }
		remove_effect = {
			set_global_flag = SAU_qatar
    	    add_state_core = 765

		}
	}
	SAU_integrate_jordan = {
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
      icon = GFX_decision_generic_decision

		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 455
			NOT = { 455 = { is_core_of = SAU } }
		}

	    visible = {
	    	has_full_control_of_state = 455
			original_tag = SAU
			NOT = { 455 = { is_core_of = SAU } }
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}
		complete_effect = { add_political_power = -50 }
	    days_remove = 60

      	remove_effect = {
			set_global_flag = SAU_jordan
    	    add_state_core = 455

		}
	}
	SAU_integrate_palestine = {
		custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
      icon = GFX_decision_generic_decision

		ai_will_do = {
			factor = 50
		}
		allowed = {
			tag = SAU
		}
		
		available = {
			has_full_control_of_state = 454 
			has_full_control_of_state = 830
			has_full_control_of_state = 831 
			NOT = { 
				AND = {
				454 = { is_core_of = SAU }
				830 = { is_core_of = SAU }
				831 = { is_core_of = SAU }
				}
			}
		}

	    visible = {
	    	has_full_control_of_state = 454
			has_full_control_of_state = 830
			has_full_control_of_state = 831 
			original_tag = SAU
			NOT = { 
				AND = {
				454 = { is_core_of = SAU }
				830 = { is_core_of = SAU }
				831 = { is_core_of = SAU }
				}
			}
	    }

		fire_only_once = no

		modifier = {
			political_power_factor = -0.05
  	  	}
		complete_effect = { add_political_power = -50 }
	    days_remove = 60

      	remove_effect = {
			set_global_flag = SAU_palestine
    	    add_state_core = 454 
			add_state_core = 830
			add_state_core = 831

		}
	}
	
	
}

SAU_east_destabilized = {
	
	SAU_prepare_the_rebelions = { 
	
		custom_cost_text = SAU_east_rebel
		custom_cost_trigger = {
			has_political_power > 50
			}
			
		 icon = ger_reichskommissariats
		 
		 fire_only_once = yes
		 
		 days_remove = 30
		 
		 allowed = { tag = SAU }
		 
		 ai_will_do = { factor = 80 }
		 
		 
		 available = { 
			has_completed_focus = SAU_destabilize_the_east 
			NOT = { has_global_flag = SAU_prepared_rebellion }
				}
		 
		 visible = { has_completed_focus = SAU_destabilize_the_east
						NOT = { has_global_flag = SAU_prepared_rebellion } }
		 
		 remove_effect =  { set_global_flag = SAU_prepared_rebellion
							 custom_effect_tooltip = SAU_prepared_rebellion }
							 
			complete_effect = { add_political_power = -50 }
							
						}
					
		 
		SAU_rebellion_in_jordan = {
			custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
			icon = ger_reichskommissariats
			
			fire_only_once = yes
			
			days_remove = 60
		 
			allowed = { tag = SAU }
			
			ai_will_do = { factor = 80 }
		 
			available = { has_global_flag = SAU_prepared_rebellion }
			
			visible = { has_global_flag = SAU_prepared_rebellion }
			
			
			complete_effect = {  add_political_power = -50 
						send_equipment = {
						equipment = infantry_equipment
						amount = 1000
						target = JOR
				}
				custom_effect_tooltip = create_two_units_tt
			}
			
			remove_effect = { ENG = {
				release = JOR
				}
				add_state_claim = 455
				
				hidden_effect = {
				JOR = {
					set_politics = { ruling_party = neutrality elections_allowed = no }
					add_popularity = { ideology = neutrality popularity = 0.7 }
					}
				JOR = {
					division_template = {
						name = "Revolutionary Division"
						priority = 1
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
				
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
				
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
						}
						support = {
							engineer = { x = 0 y = 0 }
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
							}
						}
					}
				}				
			}
		}
		
		SAU_rebellion_in_palestine = {
			custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
			icon = ger_reichskommissariats
			
			fire_only_once = yes
			
			days_remove = 60
		 
			allowed = { tag = SAU }
			
				ai_will_do = { factor = 80 }
		 
			available = { has_global_flag = SAU_prepared_rebellion }
			
			visible = { has_global_flag = SAU_prepared_rebellion }
			
			complete_effect = { add_political_power = -50 
				send_equipment = {
						equipment = infantry_equipment
						amount = 1000
						target = PAL
				}
				custom_effect_tooltip = create_two_units_tt
			}
			
			remove_effect = { ENG = {
				release = PAL
				}
				add_state_claim = 454 
				add_state_claim = 830
				add_state_claim = 831
				}
				hidden_effect = {
				PAL = {
					set_politics = { ruling_party = neutrality elections_allowed = no }
					add_popularity = { ideology = neutrality popularity = 0.7 }
					}
				PAL = {
					division_template = {
						name = "Revolutionary Division"
						priority = 1
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
				
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
				
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
						}
						support = {
							engineer = { x = 0 y = 0 }
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
						}
					}
				}
			}
		}
		
		SAU_rebellion_in_syria = {
			custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
			icon = ger_reichskommissariats
			
			fire_only_once = yes
			
			days_remove = 60
		 
			allowed = { tag = SAU }
				ai_will_do = { factor = 80 }
		 
			available = { has_global_flag = SAU_prepared_rebellion }
			
			visible = { has_global_flag = SAU_prepared_rebellion }
			
			complete_effect = { add_political_power = -50 
					send_equipment = {
						equipment = infantry_equipment
						amount = 1500
						target = SYR
					}
					send_equipment = {
						equipment = infantry_equipment
						amount = 500
						target = LEB
					}
					custom_effect_tooltip = create_four_units_tt
				}
			
				remove_effect = { 
			
				FRA = { release = SYR }
				FRA = { release = LEB }
									
				add_state_claim = 554 
				add_state_claim = 677
				add_state_claim = 680 
					
				
				hidden_effect = {
				LEB = {
					set_politics = { ruling_party = neutrality elections_allowed = no }
					add_popularity = { ideology = neutrality popularity = 0.7 }
					}
				SYR = {
					set_politics = { ruling_party = neutrality elections_allowed = no }
					add_popularity = { ideology = neutrality popularity = 0.7 }
						}
					SYR = {
					division_template = {
						name = "Revolutionary Division"
						priority = 1
						division_names_group = YUG_INF_01
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
				
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
				
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
						}
						support = {
							engineer = { x = 0 y = 0 }
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
							}
						}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
							}
						}
					}
					LEB = {
					division_template = {
						name = "Revolutionary Division"
						priority = 1
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
				
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
				
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
						}
						support = {
							engineer = { x = 0 y = 0 }
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
						}
					}
					
						}
					}
				}
			}
		
		SAU_rebellion_in_kuwait = {
			custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
			icon = ger_reichskommissariats
			
			fire_only_once = yes
			
			days_remove = 60
		 
			allowed = { tag = SAU }
				ai_will_do = { factor = 80 }
		 
			available = { has_global_flag = SAU_prepared_rebellion }
			
			visible = { has_global_flag = SAU_prepared_rebellion }
			
			complete_effect = { add_political_power = -50 
					send_equipment = {
						equipment = infantry_equipment
						amount = 1000
						target = KUW
						}
					custom_effect_tooltip = create_two_units_tt
					}
					
					remove_effect = { ENG = {
				release = KUW }
				add_state_claim = 656
				custom_effect_tooltip = create_two_units_tt
				hidden_effect = {
				KUW = {
					set_politics = { ruling_party = neutrality elections_allowed = no }
					add_popularity = { ideology = neutrality popularity = 0.7 }
					}
				KUW = {
					division_template = {
						name = "Revolutionary Division"
						priority = 1
						regiments = {
							infantry = { x = 0 y = 0 }
							infantry = { x = 0 y = 1 }
							infantry = { x = 0 y = 2 }
				
							infantry = { x = 1 y = 0 }
							infantry = { x = 1 y = 1 }
							infantry = { x = 1 y = 2 }
				
							infantry = { x = 2 y = 0 }
							infantry = { x = 2 y = 1 }
						}
						support = {
							engineer = { x = 0 y = 0 }
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
						}
					}
					random_owned_controlled_state = {
						limit = { PREV = { has_full_control_of_state = PREV } }
						create_unit = {
							division = "name = \"Revolutionary Division\" division_template = \"Revolutionary Division\" start_experience_factor = 0.9" 
							owner = PREV
							}
						}
					}
				}
			}
		}
		
		
		
		
		SAU_rebellion_in_oman = {
			custom_cost_text = SAU_east_rebel
			custom_cost_trigger = {
				has_political_power > 50
			}
			icon = ger_reichskommissariats
			
			fire_only_once = yes
			
			days_remove = 60
			
			allowed = { tag = SAU }
				ai_will_do = { factor = 80 }
		 
			available = { has_global_flag = SAU_prepared_rebellion }
			
			visible = { has_global_flag = SAU_prepared_rebellion }
			
			complete_effect = { add_political_power = -50 
				send_equipment = {
						equipment = infantry_equipment
						amount = 1000
						target = OMA
				}
			}
					
					remove_effect = { ENG = {
				end_puppet = OMA }
				
			}
		}
@border_incident_escalation_countdown = 15
@border_conflict_incident_forgotten_timer = 30
@border_conflict_escalate_to_war_countdown = 45
@border_conflict_time_until_cancelled = 360

		
	WWBCSAU_border_conflict_initiate_incident = {
		icon = WWBCSAU_border_war		

		available = {
			any_state = {
				AND = { is_owned_and_controlled_by = FROM
					OR = {
						is_owned_and_controlled_by = LEB
						is_owned_and_controlled_by = KUW
						is_owned_and_controlled_by = SYR
						is_owned_and_controlled_by = PAL
						is_owned_and_controlled_by = JOR
						is_owned_and_controlled_by = ISR
						}
					OR = {	is_claimed_by = ROOT
							is_core_of = ROOT } 
						}
				set_temp_variable = { var:test_state_temp = id }
					any_neighbor_state = {
						is_fully_controlled_by = ROOT
						set_temp_variable = { var:attacker_state_temp = id }
						custom_trigger_tooltip = {
							tooltip = WWBCSAU_has_border_troops
							ROOT = {
								divisions_in_border_state = {
									state = var:attacker_state_temp
									border_state = var:test_state_temp
									size > 0
							}
						}
					}
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
				}
				NOT = { has_state_flag = border_incident_active }
				set_temp_variable = { var:defender_state_temp = id }
			}
			NOT = { has_non_aggression_pact_with = FROM }
		}

		visible = {
			FROM = { exists = yes }
			NOT = { has_war_with = FROM }
			FROM = { has_not_initiated_border_incident_with_ROOT = yes }
			FROM = {
				NOT = {
					is_subject_of = ROOT
				}
				NOT = {
					is_in_faction_with = ROOT
				}
			}
			
			any_state = {
			AND = {
				OR = {
					is_owned_and_controlled_by = LEB
					is_owned_and_controlled_by = KUW
					is_owned_and_controlled_by = SYR
					is_owned_and_controlled_by = PAL
					is_owned_and_controlled_by = JOR
					is_owned_and_controlled_by = ISR
					}
				is_owned_and_controlled_by = FROM
				OR = {
					AND = {
						ROOT = { is_ai = yes }
						OR = {
							is_core_of = ROOT
							is_claimed_by = ROOT
						}
						
						ROOT = { has_opinion = { target = FROM value < 80 } }
					}
					
					ROOT = { is_ai = no }
				}
				
				any_neighbor_state = {
					is_fully_controlled_by = ROOT
					}
				}
			}
			
			NOT = {
				is_subject_of = FROM
			}

			OR = {
				NOT = { has_border_war_with = FROM }
				any_state = {
					is_owned_and_controlled_by = FROM
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					any_neighbor_state = {
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						is_fully_controlled_by = ROOT
					}
				}
			}
		}

		target_trigger = {
			is_not_china = yes
			FROM = { is_not_china = yes }
		}

		highlight_states = {
			OR = {
				state = FROM.defender_state_vs_@ROOT
				AND = {
					is_owned_and_controlled_by = FROM
					AND = {	ROOT = { is_literally_china = no }
							FROM= { is_literally_china = no	} 
						}
							
					OR = {	is_claimed_by = ROOT
							is_core_of = ROOT }
					OR = {
						AND = {
							ROOT = { is_ai = yes }
							OR = {
								is_core_of = ROOT
								is_claimed_by = ROOT
							}
						}
						
						ROOT = { is_ai = no }
					}
					
					set_temp_variable = { var:test_state_temp = id }
					hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
					any_neighbor_state = {
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						set_temp_variable = { var:attacker_state_temp = id }
						ROOT = {
							divisions_in_border_state = {
								state = var:attacker_state_temp
								border_state = var:test_state_temp
								size > 0
							}
						}
						is_fully_controlled_by = ROOT
					}
				}
			}
		}

		ai_will_do = {
			base = 0.2
			modifier = {
				OR = {
					NOT = {
						FROM = {
							any_owned_state = {
								OR = {
									is_core_of = ROOT
									is_claimed_by = ROOT
								}
							}
						}
					}
				}
				factor = 0
			}
			
			modifier = {
				FROM = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
				
				factor = 0.5
			}
			
			modifier = {
				NOT = { ROOT = { has_government = fascism } }
				
				factor = 0.1
			}
			
			modifier = {
				ROOT = { strength_ratio = { tag = FROM ratio < 0.5 } }
				
				factor = 0
			}
		}

		cost = 100

		fire_only_once = no
		
		days_remove = @border_incident_escalation_countdown
		days_re_enable = 150

		war_with_target_on_remove = yes

		complete_effect = {
			custom_effect_tooltip = WWBCSAU_negative_opinion
			hidden_effect = {
				FROM = { add_opinion_modifier = { target = ROOT modifier = border_conflict_started } }
				FROM = { OVERLORD = { add_opinion_modifier = { target = ROOT modifier = border_conflict_started_overlord } } }
				every_country = { 
					limit = { has_guaranteed = FROM }
					add_opinion_modifier = { target = ROOT modifier = border_conflict_started_overlord }
				}
			}
			if = {
				limit = { has_government = democratic }
				ROOT = { add_popularity = { ideology = democratic popularity = -0.02 } }
			}
			hidden_effect = {
				random_state = {
					limit = {
						is_owned_and_controlled_by = FROM
						OR = {
							AND = {
								ROOT = { is_ai = yes }
								OR = {
									is_core_of = ROOT
									is_claimed_by = ROOT
								}
							}
					
							ROOT = { is_ai = no }
						}
						
						set_temp_variable = { test_defender_state_temp = id }
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						any_neighbor_state = {
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
							set_temp_variable = { test_attacker_state_temp = id }
							ROOT = {
								divisions_in_border_state = {
									state = var:test_attacker_state_temp
									border_state = var:test_defender_state_temp
									size > 0
								}
							}
							is_fully_controlled_by = ROOT
						}
					}
					save_event_target_as = defender_state
					set_variable = { FROM.defender_state_vs_@ROOT = id }
					set_temp_variable = { defender_state_temp = id }
					set_state_flag = border_incident_active
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						set_temp_variable = { attack_dir_state_temp = id }
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
						
						ROOT = {
								divisions_in_border_state = {
									state = var:attack_dir_state_temp
									border_state = var:FROM.defender_state_vs_@ROOT
									size > 0
								}
							}
					}
					save_event_target_as = attacker_state
					set_variable = { FROM.attacker_state_vs_@ROOT = id }
					set_temp_variable = { attacker_state_temp = id }
					set_state_flag = border_incident_active
				}
			}
			custom_effect_tooltip = WWBCSAU_border_incident_delay_until_new_incident_180
			FROM = {
				country_event = { id = WWBCSAU_border_incident_defender_warning.1 hours = 1 }
				activate_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_incident_warning_defender }				
			}
		}
		remove_effect = {
			hidden_effect = {
				var:FROM.defender_state_vs_@ROOT = {
					save_event_target_as = defender_state 
				}
				var:FROM.attacker_state_vs_@ROOT = {
					save_event_target_as = attacker_state 
				}
				random_state = {
					limit = {
						is_owned_and_controlled_by = FROM
						OR = {
							AND = {
								ROOT = { is_ai = yes }
								OR = {
									is_core_of = ROOT
									is_claimed_by = ROOT
								}
							}
					
							ROOT = { is_ai = no }
						}
						
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						any_neighbor_state = {
							is_fully_controlled_by = ROOT
							has_ROOT_at_least_1_div_in_current_state_scope = yes
							hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						}
					}
					set_temp_variable = { defender_state_temp = id }
				}
				random_state = {
					limit = {
						is_fully_controlled_by = ROOT
						hidden_trigger = { NOT = { has_state_flag = border_incident_active } }
						has_ROOT_at_least_1_div_in_current_state_scope = yes
						any_neighbor_state = {
							state = var:FROM.defender_state_vs_@ROOT
						}
					}
					set_temp_variable = { attacker_state_temp = id }
				}
			}
			activate_targeted_decision = { target = FROM decision = WWBCSAU_escalate_incident_to_border_conflict }
		}
	}

	#Mission for defender warning that a conflict with FROM is coming
	WWBCSAU_border_conflict_incident_warning_defender = {

		icon = WWBCSAU_border_war

		allowed = { always = no } #Activated from effect

		available = {
			hidden_trigger = { always = no }
		}

		highlight_states = {
			OR = {
				state = var:defender_state_temp
				state = var:ROOT.defender_state_vs_@FROM
			}
		}

		war_with_target_on_timeout = yes
		ai_will_do = {
			base = 0
			modifier = {
				
			}
		}

		days_mission_timeout = @border_incident_escalation_countdown

		fire_only_once = yes

		is_good = no
		
		timeout_effect = {
			custom_effect_tooltip = escalation_possible_tooltip_for_defender
			custom_effect_tooltip = effects_if_border_conflict_is_lost
			effect_tooltip = {
				add_political_power = -100
				var:ROOT.defender_state_vs_@FROM = { FROM = { transfer_state = PREV } }
			}
			hidden_effect = {
				remove_targeted_decision = { target = FROM decision = WWBCSAU_border_conflict_incident_warning_defender }
				activate_targeted_decision = { target = FROM decision = WWBCSAU_border_conflict_escalation_warning_defender }
			}
		}
	}

	#Mission for defender warning FROM can escalate to war at any point is coming
	WWBCSAU_border_conflict_escalation_warning_defender = {

		icon = WWBCSAU_border_war

		allowed = { always = no } #Activated from effect

		available = {
			hidden_trigger = { always = no }
		}

		highlight_states = {
			OR = {
				state = var:defender_state_temp
				state = var:ROOT.defender_state_vs_@FROM
			}
		}

		war_with_target_on_timeout = yes
		ai_will_do = {
			base = 0
			modifier = {
				
			}
		}

		days_mission_timeout = @border_conflict_incident_forgotten_timer

		fire_only_once = yes

		is_good = no

		timeout_effect = {
			custom_effect_tooltip = from_cannot_escalate
			custom_effect_tooltip = effects_if_border_conflict_is_lost
			effect_tooltip = {
				add_political_power = -100
				var:ROOT.defender_state_vs_@FROM = { FROM = { transfer_state = PREV } }
			}
		}		
	}

	#Mission for attacker to escalate or incident is forgotten
	#Decision to escalate incident on border with FROM to border conflict
	WWBCSAU_escalate_incident_to_border_conflict = {

		icon = WWBCSAU_border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:FROM.attacker_state_vs_@ROOT = {
				is_fully_controlled_by = ROOT
			}
				divisions_in_border_state = {
					state = var:FROM.attacker_state_vs_@ROOT
					border_state = var:FROM.defender_state_vs_@ROOT
					size > 0
				}
		}

		highlight_states = {
			state = var:FROM.attacker_state_vs_@ROOT			
		}

		ai_will_do = {
			base = 200
			modifier = {
				
			}
		}
		
		cancel_trigger = {
			is_in_faction_with = FROM
		}

		selectable_mission = yes

		fire_only_once = yes #Reactivation handled in effect

		days_mission_timeout = @border_conflict_incident_forgotten_timer

		timeout_effect = {
			custom_effect_tooltip = WWBCSAU_border_incident_delay_until_new_incident_120
			hidden_effect = {
				FROM = { remove_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_escalation_warning_defender } }
				FROM = {
					var:attacker_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					var:defender_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
			}
		}

		complete_effect = {
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = var:FROM.attacker_state_vs_@ROOT
					num_provinces = 4
					on_win = WWBCSAU_border_conflict_won_attacker.1
					on_lose = WWBCSAU_border_conflict_lost_attacker.1
					on_cancel = WWBCSAU_border_conflict_canceled_attacker.1
				}
				
				defender = {
					state = var:FROM.defender_state_vs_@ROOT
					num_provinces = 4
					on_win = WWBCSAU_border_conflict_won_defender.1
					on_lose = WWBCSAU_border_conflict_lost_defender.1
					on_cancel = WWBCSAU_border_conflict_canceled_defender.1
				}
			}
			hidden_effect = { FROM = { remove_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_escalation_warning_defender } } }
			FROM = {
				activate_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_escalate_conflict }
				activate_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_time_until_cancelled }
			}
			activate_targeted_decision = { target = FROM decision = WWBCSAU_border_conflict_escalate_conflict }
			activate_targeted_decision = { target = FROM decision = WWBCSAU_border_conflict_time_until_cancelled }
		}
	}

	#Mission for attacker to win border war against FROM in X days
	WWBCSAU_border_conflict_time_until_cancelled = {

		icon = WWBCSAU_border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:FROM.defender_state_vs_@ROOT = { has_border_war = no }
			var:FROM.attacker_state_vs_@ROOT = { has_border_war = no }
		}
		
		highlight_states = {
			OR = {
				state = var:defender_state_temp
				state = var:FROM.defender_state_vs_@ROOT
			}
		}

		ai_will_do = {
			base = 0
			modifier = {
				
			}
		}

		days_mission_timeout = @border_conflict_time_until_cancelled
		is_good = no

		fire_only_once = yes #Reactivation handled in effect

		complete_effect = {

		}

		timeout_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				cancel_border_war = {
					defender = var:defender_state_vs_@FROM
					attacker = var:attacker_state_vs_@FROM
				}
			}
			else = {
				cancel_border_war = {
					defender = var:FROM.defender_state_vs_@ROOT
					attacker = var:FROM.attacker_state_vs_@ROOT
				}
			}
			hidden_effect = {
				remove_targeted_decision = { target = FROM decision = WWBCSAU_border_conflict_escalate_conflict }
			}
		}
	}

	#Decision to escalate conflict further
	WWBCSAU_border_conflict_escalate_conflict = {

		icon = decision_generic_ignite_civil_war

		allowed = { always = no } #Activated from effect

		visible = {
			has_border_war_with = FROM
		}

		highlight_states = {
			OR = {
				state = var:FROM.attacker_state_vs_@ROOT
				state = var:ROOT.defender_state_vs_@FROM
			}
		}

		cost = 200

		ai_will_do = {
			base = 0
			modifier = {
				
			}
		}

		fire_only_once = yes #Reactivation handled in effect

		complete_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				set_border_war_data = {
					attacker = var:ROOT.defender_state_vs_@FROM
					defender = var:ROOT.defender_state_vs_@FROM
					defender_modifier = 0.15
					combat_width = 100
				}
			}
			else = {
				set_border_war_data = {
					attacker = var:FROM.defender_state_vs_@ROOT
					defender = var:FROM.defender_state_vs_@ROOT
					attacker_modifier = 0.15
					combat_width = 100
				}
			}
			FROM = {
				set_country_flag = {
					flag = WWBCSAU_border_conflict_escalate_to_war_cooldown_@ROOT
					days = @border_conflict_escalate_to_war_countdown
					value = 1
				}
				remove_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_escalate_conflict }
			}
			set_country_flag = {
				flag = WWBCSAU_border_conflict_escalate_to_war_cooldown_@FROM
				days = @border_conflict_escalate_to_war_countdown
				value = 1
			}
			custom_effect_tooltip = in_45_days
			activate_targeted_decision = { target = FROM decision = WWBCSAU_border_conflict_escalate_to_war }
		}
	}

	#Decision to escalate conflict further
	WWBCSAU_border_conflict_escalate_to_war = {

		icon = decision_generic_ignite_civil_war

		allowed = { always = no } #Activated from effect

		visible = {
			NOT = { has_country_flag = WWBCSAU_border_conflict_escalate_to_war_cooldown_@FROM }
			has_border_war_with = FROM
		}

		highlight_states = {
			OR = {
				state = var:FROM.defender_state_vs_@ROOT
				state = var:ROOT.attacker_state_vs_@FROM
			}
		}

		cost = 150

		ai_will_do = {
			base = 0
			modifier = {
				
			}
		}

		days_remove = 15

		fire_only_once = yes #Reactivation handled in effect

		war_with_target_on_remove = yes

		complete_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				var:ROOT.defender_state_vs_@FROM = { save_event_target_as = their_state }
				var:ROOT.attacker_state_vs_@FROM = { save_event_target_as = our_state }
			}
			else = {
				var:FROM.defender_state_vs_@ROOT = { save_event_target_as = our_state }
				var:FROM.attacker_state_vs_@ROOT = { save_event_target_as = their_state }
			}
			FROM = {
				country_event = { id = WWBCSAU_border_conflict_escalate_to_war.1 }
				hidden_effect = {
					remove_targeted_decision = { target = ROOT decision = WWBCSAU_border_conflict_escalate_to_war }
				}
		 	}
		}

		remove_effect = {
			cancel_border_war = {
				dont_fire_events = yes
				defender = var:FROM.defender_state_vs_@ROOT
				attacker = var:FROM.attacker_state_vs_@ROOT
			}
			declare_war_on = { target = FROM type = annex_everything }
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				var:attacker_state_vs_@FROM = {
					clr_state_flag = border_incident_active
				}
				var:defender_state_vs_@FROM = {
					clr_state_flag = border_incident_active
				}
				clear_variable = attacker_state_vs_@FROM
				clear_variable = defender_state_vs_@FROM
			}
			else = {
				FROM = {
					var:attacker_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					var:defender_state_vs_@ROOT = {
						clr_state_flag = border_incident_active
					}
					clear_variable = attacker_state_vs_@ROOT
					clear_variable = defender_state_vs_@ROOT
				}
			}
		}
	}

	#Decision to back down from conflict
	WWBCSAU_border_conflict_back_out_of_conflict = {

		allowed = { always = no } #Activated from effect

		visible = {
			has_border_war_with = FROM
		}

		highlight_states = {
			OR = {
				state = var:FROM.attacker_state_vs_@ROOT
				state = var:ROOT.defender_state_vs_@FROM
			}
		}

		ai_will_do = {
			base = 0
			modifier = {
				
			}
		}

		fire_only_once = yes #Reactivation handled in effect

		complete_effect = {
			if = {
				limit = { is_border_conflict_defender_vs_FROM = yes }
				finalize_border_war = {
					attacker_win = yes
					attacker = ROOT.attacker_state_vs_@FROM
					defender = ROOT.attacker_state_vs_@FROM
				}
			}
			else = {
				finalize_border_war = {
					attacker = FROM.attacker_state_vs_@ROOT
					defender = FROM.attacker_state_vs_@ROOT
					defender_win = yes
				}
			}
		}
	}
}
		
		
		
	}
		 
		 